		.header
		count 0
		sum 4
		i 8

		.code
		sto @count 10
		sto @sum 0
		sto @i 0
//read i
start:
		lda @i ac1
//read count
		lda @count ac2
// i - count
		sub ac1 ac2
// i >= count then jump to end
		gtj end
// read sum
		lda @sum ac1
// sum = sum + i
		lda @i ac2
		add ac1 ac2
		sto @sum ac1
// i = i+1
        lda @i ac1
        move ac2 1
        add ac1 ac2
		sto @i ac1
//jump
		jump start
end:
		halt
		.end


// lda 메모리의값 레지스터에 가져오기
// sto 메모리에 저장하기
// move 레지스터 값넣기

// label은 기계어로 번역하므로 Header에 포함하지 않음
// 반면 variable은 Loader의 dataSegment에서 할당되어야 하기때문에 Header로 추가
// 기계어 번역을 위해 누산기는 ac1 -> 0xFE ac2 -> 0xFF로 정의.
// address는 8비트를 사용